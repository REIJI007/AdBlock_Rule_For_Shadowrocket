# 工作流名称
name: Release_ADblock_file

# 触发条件
on:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次
  workflow_dispatch:  # 允许手动触发工作流

# 工作流程中的作业
jobs:
  create-release:
    runs-on: ubuntu-latest  # 在最新版本的 Ubuntu 上运行
    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤2：获取当前时间
      - name: Get current time
        id: current-time
        run: echo "time=$(date +'%y%m%d%H%M')" >> $GITHUB_ENV  # 将时间保存为环境变量

      # 步骤3：检查是否存在相同的标签
      - name: Check if release exists
        id: check_release
        run: |
          tag_exists=$(gh release list | grep "release-${{ env.time }}" || true)
          if [ -n "$tag_exists" ]; then
            echo "Release with tag 'release-${{ env.time }}' already exists."
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "Release with tag 'release-${{ env.time }}' does not exist."
            echo "release_exists=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 步骤4：创建新的发布或更新现有发布
      - name: Create or update Release
        if: env.release_exists == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 默认 token 进行身份验证
        with:
          tag_name: release-${{ env.time }}  # 使用时间戳作为标签名
          release_name: Release ${{ env.time }}  # 使用时间戳作为发布名称
          body: "Periodic release of adblock files."  # 发布说明
          draft: false  # 创建正式发布，而非草稿

      # 步骤5：上传 adblock_reject_shadowrocket_rule.conf 文件
      - name: Upload adblock_reject_shadowrocket_rule.conf
        if: env.release_exists == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用 TOKEN 进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 使用创建发布时生成的URL
          asset_path: ./adblock_reject_shadowrocket_rule.conf
          asset_name: adblock_reject_shadowrocket_rule.conf
          asset_content_type: text/plain

      # 步骤6：上传 adblock_reject_shadowrocket_rule.txt 文件
      - name: Upload adblock_reject_shadowrocket_rule.txt
        if: env.release_exists == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用 TOKEN 进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adblock_reject_shadowrocket_rule.txt
          asset_name: adblock_reject_shadowrocket_rule.txt
          asset_content_type: text/plain
