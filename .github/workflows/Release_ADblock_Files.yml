# 工作流名称
name: Release_ADblock_files

# 触发条件
on:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  create-release:
    runs-on: ubuntu-latest  # 在最新版本的 Ubuntu 上运行
    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 步骤2：获取当前时间
      - name: Get current time
        id: current-time
        run: echo "time=$(date +'%y%m%d%H%M')" >> $GITHUB_ENV # 将时间保存为环境变量

      # 步骤3：更新时间戳文件
      - name: Update timestamp file
        run: echo "${{ env.time }}" > timestamp.txt # 将时间写入 timestamp.txt 文件

      # 步骤4：拉取最新的 main 分支并合并
      - name: Pull and merge latest main
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git fetch origin main
          git merge origin/main
        env: 
          TOKEN: ${{ secrets.TOKEN }} # 使用存储在仓库密钥中的 TOKEN

      # 步骤5：上传 adblock_reject_loon.conf 文件
      - name: Upload adblock_reject_loon.conf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用 TOKEN 进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 使用创建发布时生成的URL
          asset_path: ./adblock_reject_loon.conf
          asset_name: adblock_reject_loon.conf
          asset_content_type: text/plain

      # 步骤6：上传 adblock_reject_loon.txt 文件
      - name: Upload adblock_reject_loon.txt
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}  # 使用 TOKEN 进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adblock_reject_loon.txt
          asset_name: adblock_reject_loon.txt
          asset_content_type: text/plain
